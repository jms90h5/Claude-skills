#!/usr/bin/perl
# begin_generated_IBM_Teracloud_ApS_copyright_prolog               
#                                                                  
# This is an automatically generated copyright prolog.             
# After initializing,  DO NOT MODIFY OR MOVE                       
# **************************************************************** 
# THIS SAMPLE CODE IS PROVIDED ON AN "AS IS" BASIS.                
# TERACLOUD APS AND IBM MAKES NO REPRESENTATIONS OR WARRANTIES,    
# EXPRESS OR IMPLIED, CONCERNING  USE OF THE SAMPLE CODE, OR THE   
# COMPLETENESS OR ACCURACY OF THE SAMPLE CODE. TERACLOUD APS       
# AND IBM DOES NOT WARRANT UNINTERRUPTED OR ERROR-FREE OPERATION   
# OF THIS SAMPLE CODE. TERACLOUD APS AND IBM IS NOT RESPONSIBLE FOR THE 
# RESULTS OBTAINED FROM THE USE OF THE SAMPLE CODE OR ANY PORTION  
# OF THIS SAMPLE CODE.                                             
#                                                                  
# LIMITATION OF LIABILITY. IN NO EVENT WILL IBM BE LIABLE TO ANY   
# PARTY FOR ANY DIRECT, INDIRECT, SPECIAL OR OTHER CONSEQUENTIAL   
# DAMAGES FOR ANY USE OF THIS SAMPLE CODE, THE USE OF CODE FROM    
# THIS [ SAMPLE PACKAGE,] INCLUDING, WITHOUT LIMITATION, ANY LOST  
# PROFITS, BUSINESS INTERRUPTION, LOSS OF PROGRAMS OR OTHER DATA   
# ON YOUR INFORMATION HANDLING SYSTEM OR OTHERWISE.                
#                                                                  
# (C) Copyright Teracloud ApS 2024, 2025, IBM Corp. 2014, 2014     
# All Rights reserved.                                             
#                                                                  
# end_generated_IBM_Teracloud_ApS_copyright_prolog                 

use strict;
use warnings;

# Checks the correctness of the "data/statefulPrimitive.dat" file generated by 
# sample::StatefulPrimitive. The first attribute the output tuple must be only 
# even numbers and strictly increasing. The second attribute must be strictly 
# increasing and starting at 1.
my $filename = "data/statefulPrimitive.dat";
open FILE, "<", $filename 
  or die "Cannot open application output file $filename: $!";

# Expected value of the first attribute. Only even numbers
my $expectedValue = 0; 
# Expected number of tuples. Must be strictly increasing.
my $numTuples = 0; 
my $drainId = 1;
# Beacon drains the pipeline at every 500, but all odd numbers are discarded
my $interval = 250;

while (my $line = <FILE>) {
  chomp($line);
  if ($line =~ m/#reset|#checkpoint|#retire/) {
    next;
  }
  if ($line =~ m/#drain/) {
    my @fields = split(/ /, $line);
    if ($numTuples % 250 != 0) {
      my $drainInterval = $drainId - 1;
      print "Error: Unexpected number of tuples between #drains $drainInterval and $drainId\n";
      exit(1);
    }
    $drainId++;
    next;
  }
  $numTuples++;
  my @fields = split(/,/, $line);
  my $size = @fields;
  if ($size != 2) {
    print "Skipping incomplete line: $line\n";
    next;
  }
  if ($expectedValue != $fields[0]) {
    print "Error on attribute 0: expected $expectedValue and got $fields[0]. Line: $line\n";
    exit(1);
  }
  $expectedValue += 2;
  if ($numTuples != $fields[1]) {
    print "Error on attribute 1: expected $numTuples and got $fields[1]. Line: $line\n";
    exit(1);
  }
}
print "SUCCESS\n";
