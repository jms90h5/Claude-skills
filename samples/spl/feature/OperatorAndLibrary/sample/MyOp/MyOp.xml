<?xml version="1.0" ?>
<!-- begin_generated_IBM_Teracloud_ApS_copyright_prolog               -->
<!--                                                                  -->
<!-- This is an automatically generated copyright prolog.             -->
<!-- After initializing,  DO NOT MODIFY OR MOVE                       -->
<!-- **************************************************************** -->
<!-- THIS SAMPLE CODE IS PROVIDED ON AN "AS IS" BASIS.                -->
<!-- TERACLOUD APS AND IBM MAKES NO REPRESENTATIONS OR WARRANTIES,    -->
<!-- EXPRESS OR IMPLIED, CONCERNING  USE OF THE SAMPLE CODE, OR THE   -->
<!-- COMPLETENESS OR ACCURACY OF THE SAMPLE CODE. TERACLOUD APS       -->
<!-- AND IBM DOES NOT WARRANT UNINTERRUPTED OR ERROR-FREE OPERATION   -->
<!-- OF THIS SAMPLE CODE. TERACLOUD APS AND IBM IS NOT RESPONSIBLE FOR THE -->
<!-- RESULTS OBTAINED FROM THE USE OF THE SAMPLE CODE OR ANY PORTION  -->
<!-- OF THIS SAMPLE CODE.                                             -->
<!--                                                                  -->
<!-- LIMITATION OF LIABILITY. IN NO EVENT WILL IBM BE LIABLE TO ANY   -->
<!-- PARTY FOR ANY DIRECT, INDIRECT, SPECIAL OR OTHER CONSEQUENTIAL   -->
<!-- DAMAGES FOR ANY USE OF THIS SAMPLE CODE, THE USE OF CODE FROM    -->
<!-- THIS [ SAMPLE PACKAGE,] INCLUDING, WITHOUT LIMITATION, ANY LOST  -->
<!-- PROFITS, BUSINESS INTERRUPTION, LOSS OF PROGRAMS OR OTHER DATA   -->
<!-- ON YOUR INFORMATION HANDLING SYSTEM OR OTHERWISE.                -->
<!--                                                                  -->
<!-- (C) Copyright Teracloud ApS 2024, 2025, IBM Corp. 2010, 2013     -->
<!-- All Rights reserved.                                             -->
<!--                                                                  -->
<!-- end_generated_IBM_Teracloud_ApS_copyright_prolog                 -->
<operatorModel
  xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" 
  xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/operator
  operatorModel.xsd">
  <cppOperatorModel>
    <context> 
      <description>
A simple example operator that shows how to link to and invoke code in a library.
The library is packaged as a shared library - `lib/libMySampleLib.so`.  
This library contains a single method `MySampleClass::hello()` which returns
a "hello world" string.  

The operator invokes `MySampleClass::hello()` to retrieve and then print out
the hello world message in the operator's `AllPortsReady` method.
      </description>
      <libraryDependencies>
        <!-- This operator can have several dependencies. We only use one here -->
        <library>
          <!-- A description for this library -->
          <cmn:description>My Sample Library</cmn:description>
          <cmn:managedLibrary>
            <!-- the name of the library for linking. Will be used as -lMySampleLib -->
            <cmn:lib>MySampleLib</cmn:lib>
            <!-- Where to find the library.  Relative to the current directory. Will be used as -L<dir>/lib -->
            <cmn:libPath>../../impl/lib</cmn:libPath>
            <!-- Where to find the include file.  Relative to the current directory. Will be used as -I<dir>/Sample.h -->
            <cmn:includePath>../../impl/include</cmn:includePath>
          </cmn:managedLibrary>
        </library>
      </libraryDependencies>
      <providesSingleThreadedContext>Always</providesSingleThreadedContext>
    </context>  
    <parameters>
      <allowAny>true</allowAny>
    </parameters>
    <inputPorts>
      <inputPortOpenSet>
        <tupleMutationAllowed>false</tupleMutationAllowed>
        <windowingMode>NonWindowed</windowingMode>
        <windowPunctuationInputMode>Oblivious</windowPunctuationInputMode>
      </inputPortOpenSet>
    </inputPorts>
    <outputPorts>
      <outputPortOpenSet>
        <expressionMode>Expression</expressionMode> 
        <autoAssignment>false</autoAssignment>
        <completeAssignment>false</completeAssignment>
        <rewriteAllowed>true</rewriteAllowed>
        <windowPunctuationOutputMode>Generating</windowPunctuationOutputMode>
        <tupleMutationAllowed>true</tupleMutationAllowed>
      </outputPortOpenSet>    
    </outputPorts>  
  </cppOperatorModel>
</operatorModel>


