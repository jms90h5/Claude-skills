<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<functionModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/function" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/function functionModel.xsd">
  <!--DO NOT EDIT THIS FILE - it is machine generated-->
  <functionSet>
    <headerFileName>SPL_JNIFunctions_com_ibm_streams_javafunctionsamples_jvm.h</headerFileName>
    <cppNamespaceName>SPL::JNIFunctions::com::ibm::streams::javafunctionsamples::jvm::SPL_JNIFunctions</cppNamespaceName>
    <functions>
      <function>
        <!--Generated from com.ibm.streams.function.samples.jvm.SystemFunctions in lib/samples.jar at Wed Jun 11 18:38:49 UTC 2025-->
        <description>Returns the Java virtual machine implementation name.</description>
        <prototype><![CDATA[public rstring getVmName()]]></prototype>
        <javaFunctionName>public static java.lang.String com.ibm.streams.function.samples.jvm.SystemFunctions.getVmName()</javaFunctionName>
      </function>
      <function>
        <!--Generated from com.ibm.streams.function.samples.jvm.SystemFunctions in lib/samples.jar at Wed Jun 11 18:38:49 UTC 2025-->
        <description>Returns the Java virtual machine implementation vendor.</description>
        <prototype><![CDATA[public rstring getVmVendor()]]></prototype>
        <javaFunctionName>public static java.lang.String com.ibm.streams.function.samples.jvm.SystemFunctions.getVmVendor()</javaFunctionName>
      </function>
      <function>
        <!--Generated from com.ibm.streams.function.samples.jvm.SystemFunctions in lib/samples.jar at Wed Jun 11 18:38:49 UTC 2025-->
        <description>Returns the Java virtual machine implementation version.</description>
        <prototype><![CDATA[public rstring getVmVersion()]]></prototype>
        <javaFunctionName>public static java.lang.String com.ibm.streams.function.samples.jvm.SystemFunctions.getVmVersion()</javaFunctionName>
      </function>
      <function>
        <!--Generated from com.ibm.streams.function.samples.jvm.SystemFunctions in lib/samples.jar at Wed Jun 11 18:38:49 UTC 2025-->
        <description>Request running of `Object.finalize()` for objects pending garbage collection in the Java virtual machine.</description>
        <prototype><![CDATA[public stateful void runFinalization()]]></prototype>
        <javaFunctionName>public static void com.ibm.streams.function.samples.jvm.SystemFunctions.runFinalization()</javaFunctionName>
      </function>
      <function>
        <!--Generated from com.ibm.streams.function.samples.jvm.SystemFunctions in lib/samples.jar at Wed Jun 11 18:38:49 UTC 2025-->
        <description>Request garbage collection for the Java virtual machine.</description>
        <prototype><![CDATA[public stateful void gc()]]></prototype>
        <javaFunctionName>public static void com.ibm.streams.function.samples.jvm.SystemFunctions.gc()</javaFunctionName>
      </function>
      <function>
        <!--Generated from com.ibm.streams.function.samples.jvm.SystemFunctions in lib/samples.jar at Wed Jun 11 18:38:49 UTC 2025-->
        <description>Returns the amount of free memory (in bytes) in the Java Virtual Machine.</description>
        <prototype><![CDATA[public stateful int64 freeMemory()]]></prototype>
        <javaFunctionName>public static long com.ibm.streams.function.samples.jvm.SystemFunctions.freeMemory()</javaFunctionName>
      </function>
      <function>
        <!--Generated from com.ibm.streams.function.samples.jvm.SystemFunctions in lib/samples.jar at Wed Jun 11 18:38:49 UTC 2025-->
        <description>Return the number of processors available to the Java virtual machine.</description>
        <prototype><![CDATA[public stateful int32 availableProcessors()]]></prototype>
        <javaFunctionName>public static int com.ibm.streams.function.samples.jvm.SystemFunctions.availableProcessors()</javaFunctionName>
      </function>
      <function>
        <!--Generated from com.ibm.streams.function.samples.jvm.SystemFunctions in lib/samples.jar at Wed Jun 11 18:38:49 UTC 2025-->
        <description>Returns the total amount of memory in the Java virtual machine.</description>
        <prototype><![CDATA[public stateful int64 totalMemory()]]></prototype>
        <javaFunctionName>public static long com.ibm.streams.function.samples.jvm.SystemFunctions.totalMemory()</javaFunctionName>
      </function>
      <function>
        <!--Generated from com.ibm.streams.function.samples.jvm.SystemFunctions in lib/samples.jar at Wed Jun 11 18:38:49 UTC 2025-->
        <description>Returns the maximum amount of memory that the Java virtual machine will attempt to use.</description>
        <prototype><![CDATA[public stateful int64 maxMemory()]]></prototype>
        <javaFunctionName>public static long com.ibm.streams.function.samples.jvm.SystemFunctions.maxMemory()</javaFunctionName>
      </function>
    </functions>
    <dependencies>
      <library>
        <cmn:description>C++ interface to Java native functions.</cmn:description>
        <cmn:managedLibrary>
          <cmn:lib>streams-stdtk-javaop</cmn:lib>
          <cmn:lib>streams-stdtk-runtime</cmn:lib>
          <cmn:includePath>.</cmn:includePath>
        </cmn:managedLibrary>
      </library>
      <library>
        <cmn:description>Java JNI.</cmn:description>
        <cmn:managedLibrary>
          <cmn:lib>pthread</cmn:lib>
          <cmn:lib>dl</cmn:lib>
          <cmn:includePath>@JAVA_HOME@/include</cmn:includePath>
          <cmn:includePath>@JAVA_HOME@/include/linux</cmn:includePath>
          <cmn:command>@STREAMS_TOOLKIT_DIR@/impl/bin/JavaOp_vmpath.sh</cmn:command>
        </cmn:managedLibrary>
      </library>
    </dependencies>
  </functionSet>
</functionModel>
