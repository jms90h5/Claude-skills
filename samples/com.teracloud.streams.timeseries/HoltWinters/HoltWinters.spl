// begin_generated_IBM_Teracloud_ApS_copyright_prolog               
//                                                                  
// This is an automatically generated copyright prolog.             
// After initializing,  DO NOT MODIFY OR MOVE                       
// **************************************************************** 
// THIS SAMPLE CODE IS PROVIDED ON AN "AS IS" BASIS.                
// TERACLOUD APS AND IBM MAKES NO REPRESENTATIONS OR WARRANTIES,    
// EXPRESS OR IMPLIED, CONCERNING  USE OF THE SAMPLE CODE, OR THE   
// COMPLETENESS OR ACCURACY OF THE SAMPLE CODE. TERACLOUD APS       
// AND IBM DOES NOT WARRANT UNINTERRUPTED OR ERROR-FREE OPERATION   
// OF THIS SAMPLE CODE. TERACLOUD APS AND IBM IS NOT RESPONSIBLE FOR THE 
// RESULTS OBTAINED FROM THE USE OF THE SAMPLE CODE OR ANY PORTION  
// OF THIS SAMPLE CODE.                                             
//                                                                  
// LIMITATION OF LIABILITY. IN NO EVENT WILL IBM BE LIABLE TO ANY   
// PARTY FOR ANY DIRECT, INDIRECT, SPECIAL OR OTHER CONSEQUENTIAL   
// DAMAGES FOR ANY USE OF THIS SAMPLE CODE, THE USE OF CODE FROM    
// THIS [ SAMPLE PACKAGE,] INCLUDING, WITHOUT LIMITATION, ANY LOST  
// PROFITS, BUSINESS INTERRUPTION, LOSS OF PROGRAMS OR OTHER DATA   
// ON YOUR INFORMATION HANDLING SYSTEM OR OTHERWISE.                
//                                                                  
// (C) Copyright Teracloud ApS 2024, 2025, IBM Corp. 2012, 2015     
// All Rights reserved.                                             
//                                                                  
// end_generated_IBM_Teracloud_ApS_copyright_prolog                 
use com.teracloud.streams.timeseries.modeling::HoltWinters2;

composite HWMain {
	
	graph	
	
    stream<float64 KPI> oneKPIStream = FileSource() {
            param
                file : "HWTest.csv"; 
                format:csv; 
                
        }
	stream <float64 KPI, list<float64> predKPIs> HWAdditive = HoltWinters2(oneKPIStream ){
			param
			     inputTimeSeries:KPI;
			     stepAhead: 24u;
			     samplesPerSeason: 12u;
			     initSeasons: 4u;
			     algorithm: Additive;
			output
			HWAdditive:
			predKPIs=forecastedAllTimeSeriesSteps();
			     
			}
	() as writerAddGroupBy = FileSink(HWAdditive) 
	  {
            param
                file : "foreacsted_stream.csv";
                format: csv;
        }
	 



     config 
      logLevel: error;
}
